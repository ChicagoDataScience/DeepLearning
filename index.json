[
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/logistics/schedule/",
	"title": "Schedule",
	"tags": [],
	"description": "",
	"content": " L01 : Motivating Applications, Machine Learning Pipeline (Data, Models, Loss, Optimization), Backpropagation L02 : Feedforward Networks: Nonlinearities, Convolutional Neural Networks: Convolution, Pooling L03 : Jumpstarting Convolutional Neural Networks: Visualization, Transfer, Practical Models (VGG, ResNet) L04 : Text and Embeddings: Introduction to NLP, Word Embeddings, Word2Vec L05 : Recurrent Neural Networks and Transformers: Sequence to Sequence Learning, RNNs and LSTMs L06 : Unsupervised Deep Learning: Generative Adversarial Networks, Variational Autoencoders LP1 : Project Progress Check-in  Hand in a project intermediate project report by the deadline in the course logistics. This will be discussed during class hours with individual teams.  L07 : Online Learning: A/B Testing, Multi-armed Bandits, Contextual Bandits L08 : Reinforcement Learning: Policies, State-Action Value Functions, Q-Learning L09 : Deep Reinforcement Learning: Function Approximation, DQN for Atari Games, AlphaGo Zero L10: Advanced NLP: Attention, BERT and Transformers L11: Ootimization Strategies L12: Deep Learning for Recommendation Systems LP2: Project Presentations by Students  Live project presentation during class hours. More details are provided in the project instuctions document (see logistics).  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/lecture01/",
	"title": "Lecture 1",
	"tags": [],
	"description": "",
	"content": " L01 : Motivating Applications, Machine Learning Pipeline (Data, Models, Loss, Optimization), Backpropagation  Lecture note Notebook: Python review Notebook: Linear classifier with backprop Notebook: Simple 2D data Online Demo  Lecture Goals  Understand the key components to set up a classification task Relate business problems to machine learning methods Understand how chain rule works Understand why multiclass logistic regression may not work well even for 2D data  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/lecture02/",
	"title": "Lecture 2",
	"tags": [],
	"description": "",
	"content": " L02 : Feedforward Networks: Nonlinearities, Convolutional Neural Networks: Convolution, Pooling  Lecture note Notebook: Feedforward net with backprop Notebook: Pytorch Basics Notebook: Convolutional network run-through University GPU setup video  Lecture Goals  Get acquainted with the basics of Python Understand the notion of hidden layers and nonlinearities Convolution layer as collection of filters applied to input tensors Why pooling helps in reducing parameters downstream  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/lecture03/",
	"title": "Lecture 3",
	"tags": [],
	"description": "",
	"content": " L03 : Jumpstarting Convolutional Neural Networks: Visualization, Transfer, Practical Models (VGG, ResNet)  Lecture note Notebook: Overfitting and Dropout example (original source)  Lecture Goals  Understand how to transfer parameters previously learned for a new task Know the different ways to debug a deep network Be aware of the different engineering tricks such as dropout, batch normalization Learn why image datasets can be enhanced using data augmentation  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/lecture04/",
	"title": "Lecture 4",
	"tags": [],
	"description": "",
	"content": " L04 : Text and Embeddings: Introduction to NLP, Word Embeddings, Word2Vec  Lecture note Spacy Additional Reading: Latent Dirichlet Allocation Additional Reading: CNN for sentence classification tasks. link1 and link2 Pytorch tutorial on using CNN for sentence classification: notebook 4  Lecture Goals  Understand how natural language elements (such as words) are processed in an analytics workflow Understand the shortcomings of methods such as Naive Bayes, Latent Dirichlet Allocation Realize that a CNN can also be used for a NLP task (sentence classification/sentiment analysis) What is word2vec and how does it help in NLP tasks?  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/lecture05/",
	"title": "Lecture 5",
	"tags": [],
	"description": "",
	"content": " L05 : Recurrent Neural Networks and Transformers: Sequence to Sequence Learning, RNNs and LSTMs  Lecture note part I Lecture note part II RNN example in Pytorch RNN function implementation in Pytorch LSTM example in Pytorch  Lecture Goals  Know when prediction tasks can have sequential dependencies The RNN architecture and unfolding Know how LSTMs work Applications of ‘sequential to sequential’ models  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/lecture06/",
	"title": "Lecture 6",
	"tags": [],
	"description": "",
	"content": " L06 : Unsupervised Deep Learning: Generative Adversarial Networks, Variational Autoencoders  Lecture note Notebook: GAN example on CelebFaces Attributes (CelebA) Dataset (dataset) VAE in Pytorch from Pytorch examples repository A simple flask app for a Pytorch classification model (tutorial page)  Lecture Goals  Meaning of generative modeling The intuition behind generative adversarial networks (GANs) What are variational autoencoders (VAEs) and where can they be used? Differences between GANs and VAEs  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/lecture07/",
	"title": "Lecture 7",
	"tags": [],
	"description": "",
	"content": " L07 : Online Learning: A/B Testing, Multi-armed Bandits, Contextual Bandits  Lecture note Bandit Implementations in Python: SMPyBandits A blog post on Bandits by Lilian Weng  Lecture Goals  What is online learning? How is it different from supervised learning? Relation between forecasting and decision making The multi armed bandit problem and solutions Contextual bandits  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/lecture08/",
	"title": "Lecture 8",
	"tags": [],
	"description": "",
	"content": " L08 : Reinforcement Learning: Policies, State-Action Value Functions, Q-Learning  Lecture note Openai Gym RL in Pytorch from Pytorch examples repository  Lecture Goals  What is reinforcement learning? Basics of a Markov Decision Process Policies, Values and how to think about these two objects Bellman Expectation Equation and Bellman Optimality Equation  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/lecture09/",
	"title": "Lecture 9",
	"tags": [],
	"description": "",
	"content": " L09 : Deep Reinforcement Learning: Function Approximation, DQN for Atari Games, AlphaGo Zero  Lecture note Implementations I Implementations II Flappy Bird RL  Lecture Goals  Function approximation in Q-learning DQN for Atari games Monte Carlo tree search vs Monte Carlo rollouts AlphaZero for Go, Chess and Shogi  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/lecture10/",
	"title": "Lecture 10",
	"tags": [],
	"description": "",
	"content": " L10 : Advanced NLP  Attention Is All You Need and an annotated version BERT Attention Transformer in Pytorch SOTA Transformer Implementations  Lecture Goals  TBD  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/lecture11/",
	"title": "Lecture 11",
	"tags": [],
	"description": "",
	"content": " L11: Advanced Vision, Optimization Strategies  Image localization, YOLOv3 Neural style transfer Adam SGD RMSProp  Lecture Goals  TBD  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/lecture12/",
	"title": "Lecture 12",
	"tags": [],
	"description": "",
	"content": " L12: Deep Learning for Recommendation Systems Lecture Goals  TBD  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/logistics/",
	"title": "Course Logistics",
	"tags": [],
	"description": "",
	"content": " Course Logistics  Semester: Fall 2020 Lectures: Thursdays 3.30 PM to 6.00 PM Mode: Online synchronous (i.e., location is online). The course will be delivered over Zoom (an invite will be sent before the first day of class). See the online learning page for basic technology requirements. Staff  Instructor: Dr. Theja Tulabandhula (netid: theja) Teaching Assistant: Danial Mohseni-Taheri (netid: smohse3)  Communication: via slack, zoom and one note class notebook. Office hours: online via slack zoom.  Textbook and Materials  Deep Learning by Ian Goodfellow and Yoshua Bengio and Aaron Courville (2016). Reinforcement Learning: An Introduction by Richard S. Sutton and Andrew G. Barto (2018).  Software  Any OS should be okay. If in doubt, run a virtual machine running linux (this will be discussed in the class). Some of the software we will work with are:  Python: Refer to this set of notes or this to get started in Python. Jupyter \u0026hellip;   Hardware  There will be varied computing resources needed for this course.  We will rely on Google Colab, especially the GPU/TPU to train our deep learning models. Try using a virtual machine with linux on your own computer if needed. A Windows virtual desktop is available at desktop.uic.edu if needed. You can refer to these two help pages to get started.    Assignments  Assignment 1. Due 09-16. Example template ipynb. Assignment 2. Due 09-30. Assignment 3. Due 10-21. Assignment 4. Due 11-11.   These involve reimplementing recent deep-learning techniques and understanding their behavior on interesting datasets. Always mention any sources that were relied on, in your assignment solutions. Submission deadline is BEFORE 11.59 PM on the concerned day. Late submissions will have an automatic 20% penalty per day without exceptions. Use Blackboard for uploads.  Project  Students are expected to apply what they learn in the course and demonstrate their understanding by undertaking a suitable project. A preliminary documentation along with the scripts/codes/commands used is to be submitted on October 7th and a final version of the same is to be submitted on December 2nd. The projects will be presented to the rest of the class on December 3rd. The evaluation criteria and other details are available here. Submission deadline is BEFORE 11.59 PM on the concerned day. Late submissions will have an automatic 20% penalty per day. Use Blackboard for uploading your work as a single zip file.  Grades  Grades will be based on the assignments (4 times 10%), the project (see project evaluation criteria above) (50%) and course participation (10%).  Miscellaneous Information  This is a 4 credit graduate level course offered by the Information and Decision Sciences department at UIC. See the academic calendar for the semester timeline. Students who wish to observe their religious holidays (http://oae.uic.edu/religious-calendar/) should notify the instructor within one week of the first lecture date. Contact the instructor at the earliest, if you require any accommodations for access to and/or participation in this course. Refer to the academic integrity guidelines set by the university.  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/",
	"title": "Deep Learning",
	"tags": [],
	"description": "",
	"content": " Advanced Predictive Models and Applications for Business Analytics (IDS576) The goal of this class is to cover a subset of advanced machine learning techniques, after students have seen the basics of data mining (such as in in IDS 572) and machine learning (such as in IDS 575).\nBroadly, we will cover topics spanning deep learning and reinforcement learning. In particular, we will study popular deep learning architectures, their design choices and how they are trained. This will be motivated by business applications dealing with image, text and tabular data. Finally, we will look at online and reinforcement learning frameworks and their role in sequential decision making settings such as retail.\nA tentative list of topics is as follows:\n Backpropagation and feed forward neural networks Convolutional networks (CNNs) Recurrent networks and Long short-term memory networks (LSTMs) Attention mechanism and transformers (BERT, GPT-3) Variational autoencoders (VAEs) Generative adversarial networks (GANs) Deep reinforcement learning and Deep Q-Network (DQN) Deep learning design choices such as optimizers (Adam), nonlinearities, embeddings, attention, dropout, batch normalization etc.  Previous Editions  Fall 2019 (has videos!) Spring 2019 (has videos!) Spring 2018 (has videos!) Spring 2017 (has videos!)  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/logistics/online_technology_requirements/",
	"title": "Online Learning Details",
	"tags": [],
	"description": "",
	"content": " Online Learning Details To maximize the learning experience, it will be good if students can meet the following basic technology requirements:\n At a minimum, students should have a device and an internet connection. A microphone, and a webcam would be highly recommended. See the Basic Technology Requirements link for more details.\n Laptop, Chromebook or Desktop Computer: Note that Chromebooks are used to perform a variety of browser-based tasks with most data and applications, such as Blackboard Learn, Blackboard Collaborate, Google Docs, and Office 365, residing in the cloud rather than on the machine itself. This can result in somewhat reduced functionality, depending on your needs. If you do not have reliable access to a computer at home, ACCC may have a laptop to lend to you. Please fill out our request form at accc.uic.edu/forms/laptop-request\n Internet: Many service providers are offering connectivity solutions for students without access to Wi-Fi or the internet. The Illinois Citizens Utility Board is maintaining a comprehensive list of the available options here: citizensutilityboard.org/blog/2020/03/19/cubs-guide-utility-services-during-the-covid-19-public-health-emergency.\n The State of Illinois is maintaining a map of publicly available internet hotspots across the state that can be used for academic-related needs. These hotspots are available from within a parked vehicle. The map, and additional information, can be viewed at www.ildceo.net/wifi.\n Additionally, the ACCC has a very limited supply of cellular hotspots available for those students who are unable to take advantage of the above offers. Please fill out our request form at accc.uic.edu/forms/laptop-request/.\n  Microphone: While this may be built into your computer, we recommend using an external device such as a USB microphone or headset.\n Webcam: A built-in camera may be installed on your laptop; if not, you can use an external USB camera for video conferencing.\n  "
},
{
	"uri": "https://chicagodatascience.github.io/DeepLearning/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]